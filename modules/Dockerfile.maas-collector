# syntax=docker/dockerfile:1

ARG PYTHON_VERSION=3.11.11
ARG DEBIAN_VERSION="bookworm"

FROM python:${PYTHON_VERSION}-slim-${DEBIAN_VERSION}
LABEL Author="TELESPAZIO FRANCE"

WORKDIR /app

COPY ./build/maas-model/*.whl  ./
COPY ./build/maas-collector/*.whl  ./

# update distrib and add needed tools
# follow best pratices: https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#sort-multi-line-arguments
RUN apt-get update
RUN apt-get install -y curl jq
RUN rm -rf /var/lib/apt/lists/*

RUN pip install ./maas_model*.whl
RUN pip install ./maas_collector*.whl
RUN rm -f *.whl

# Create a non-root user and group
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Change ownership of the application files
RUN chown -R appuser:appuser /app

# Switch to the non-root user
USER appuser

# Default host
ENV HEALTHCHECK_HOSTNAME=localhost
# Default port
ENV HEALTHCHECK_PORT=8080

# Health check to ensure the container is running properly
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD curl --fail http://${HEALTHCHECK_HOSTNAME}:${HEALTHCHECK_PORT}/healthcheck || exit 1


VOLUME ["/conf", "/data"]

ENTRYPOINT [ "python", "-m"]

CMD [ "maas-collector", "maas_collector.rawdata.cli.filesystem", "-v", "/data" ]

## launch as a filesytem consumer
# docker run -it --rm \
#   -v $PWD/tests/data/:/data \
#   -v $PWD/tests/conf:/conf \
#   -e "ES_URL=http://<user>:<passwd>@<elastic_url>:<port>" \
#   -e "AMQP_URL=http://<user>:<passwd>@<rabbitmq_url>:<port>" \
#   maas-collector



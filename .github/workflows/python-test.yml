name: Run Tests

on:
  push:
    branches:
      - '**'  # Triggers on push to any branch
    tags:
      - '*'  # Triggers on push to any tag
  pull_request:
    branches:
      - '**'  # Triggers on pull request to any branch
    

jobs:
  python-test:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        module: [maas-model, maas-engine, maas-collector, maas-cds]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11.11'
        architecture: x64

    - name: Init venv
      run: |
        python -m venv venv

    - name: Install dependencies
      run: |
        source venv/bin/activate
        pip install -e ./modules/maas-model
        pip install -e ./modules/maas-engine
        pip install -e ./modules/maas-collector
        pip install -e ./modules/maas-cds

    - name: Install test dependencies
      run: |
        source venv/bin/activate
        pip install pytest
        pip install pytest-cov
        pip install wheel
    - name: Run tests
      run: |
        source venv/bin/activate
        pytest ./modules/${{ matrix.module }}/tests --junitxml=reports/${{ matrix.module }}-results.xml

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.module }}
        path: reports/${{ matrix.module }}-results.xml

  python-build:
    runs-on: ubuntu-22.04

    needs: python-test
    strategy:
      matrix:
        module: [maas-model, maas-engine, maas-collector, maas-cds]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2    
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11.11'
        architecture: x64

    - name: Install tox
      run: pip install tox

    - name: Build wheels
      run: |
        tox -c ./modules/${{ matrix.module }}/tox.ini -e build
        
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: wheel-${{ matrix.module }}
        path: ./modules/${{ matrix.module }}/dist/


  docker-build:
    runs-on: ubuntu-22.04

    needs: python-build
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download specific artifact
      uses: actions/download-artifact@v4
      with:
        name: wheel-maas-model
        path: ./modules/build/maas-model/
    - name: Download specific artifact
      uses: actions/download-artifact@v4
      with:
        name: wheel-maas-engine
        path: ./modules/build/maas-engine/ 
    - name: Download specific artifact
      uses: actions/download-artifact@v4
      with:
        name: wheel-maas-cds
        path: ./modules/build/maas-cds/ 
    - name: Download specific artifact
      uses: actions/download-artifact@v4
      with:
        name: wheel-maas-collector
        path: ./modules/build/maas-collector/

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Docker images
      run: |
        docker build --no-cache -t "ghcr.io/${{ github.repository }}/maas-cds:${{ github.ref_name }}" -f ./modules/Dockerfile.maas-cds ./modules
        docker build --no-cache -t "ghcr.io/${{ github.repository }}/maas-collector:${{ github.ref_name }}" -f ./modules/Dockerfile.maas-collector ./modules

    - name: Push Docker image
      run: |
        docker push ghcr.io/${{ github.repository }}/maas-cds:${{ github.ref_name }}
        docker push ghcr.io/${{ github.repository }}/maas-collector:${{ github.ref_name }}
